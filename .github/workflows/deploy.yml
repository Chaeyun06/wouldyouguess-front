name: Build
on:
  push:
    branches:
      - release # 빌드하고싶은 브랜치
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 20.x ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

        # env 파일을 설정해줍니다.
      - name: Set .env file
        run: |
          touch .env
          echo "${{ secrets.ENV }}" > .env

        # 프로젝트를 빌드해줍니다.
      - name: Build project
        run: |
          yarn install
          yarn build

        # s3와 cloudfront에 접근하기 위해 access key와 secret kye를 통해 인증을 해줍니다.
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

        # s3에 프로젝트를 업로드합니다.
      - name: Upload to S3 test
        run: |
          aws s3 sync ./dist/ s3://${{ secrets.AWS_STAGING_BUCKET_NAME }} --region ${{ secrets.AWS_DEFAULT_REGION }}

        # cloudfront cache를 무효화 해줍니다.
      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_DISTRIBUTION_ID }} --paths "/*"